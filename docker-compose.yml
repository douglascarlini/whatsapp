services:

  db:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER:-username}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS:-password}
    volumes:
      - ./data/db:/data/db

  rmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER:-username}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASS:-password}
    volumes:
      - ./data/rmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./data/rmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
      - ${RMQ_PORT:-8082}:15672

  bot:
    build:
      context: ./
      dockerfile: docker/bot/Dockerfile
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./api:/usr/src/app/api
      - ./library:/usr/src/app/lib
      - ./data/bot:/usr/src/app/data
      - ./data/web:/usr/src/app/sessions
    ports:
      - ${API_PORT:-8080}:80
    depends_on:
      - rmq
      - db

  app:
    build:
      context: ./
      dockerfile: docker/app/Dockerfile
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./library:/usr/src/app/lib
      - ./data/app:/usr/src/app/data
    depends_on:
      - bot

  dba:
    image: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_BASICAUTH_USERNAME: ${DB_USER:-username}
      ME_CONFIG_BASICAUTH_PASSWORD: ${DB_PASS:-password}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USER:-username}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASS:-password}
      ME_CONFIG_MONGODB_URL: mongodb://${DB_USER:-username}:${DB_PASS:-password}@db:27017
    depends_on:
      - db
    ports:
      - ${DB_PORT:-8081}:8081